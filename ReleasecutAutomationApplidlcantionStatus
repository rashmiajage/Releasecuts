import React, { Component } from "react";

class ApplicationStatus extends Component {
  constructor(props) {
    super(props);
    this.state = {
      showStatus: false,
      buildData: [
        {
          component: "cvams-chat-data-service",
          snapshot: {
            status: "success",
            jenkinsUrl: "http://jenkins/job/chat-snapshot"
          },
          release: {
            status: "failed",
            jenkinsUrl: "http://jenkins/job/chat-release"
          }
        },
        {
          component: "cvams-orchestrator",
          snapshot: {
            status: "success",
            jenkinsUrl: "http://jenkins/job/orchestrator-snapshot"
          },
          release: {
            status: "in_progress",
            jenkinsUrl: "http://jenkins/job/orchestrator-release"
          }
        }
      ]
    };
  }

  getStatusIcon(status) {
    switch (status) {
      case "success":
        return "ðŸŸ©";
      case "in_progress":
        return "ðŸŸ¨";
      case "failed":
        return "ðŸŸ¥";
      default:
        return "â¬œ";
    }
  }

  toggleStatus = () => {
    this.setState((prevState) => ({
      showStatus: !prevState.showStatus
    }));
  };

  render() {
    const { showStatus, buildData } = this.state;

    return (
      <div style={{ padding: "20px" }}>
        <button
          onClick={this.toggleStatus}
          style={{
            padding: "10px 20px",
            backgroundColor: "#2563eb",
            color: "white",
            border: "none",
            borderRadius: "6px",
            cursor: "pointer"
          }}
        >
          {showStatus ? "Hide Application Status" : "Show Application Status"}
        </button>

        {showStatus && (
          <div
            style={{
              display: "grid",
              gridTemplateColumns: "repeat(auto-fit, minmax(300px, 1fr))",
              gap: "20px",
              marginTop: "20px"
            }}
          >
            {buildData.map((comp) => (
              <div
                key={comp.component}
                style={{
                  border: "1px solid #ccc",
                  borderRadius: "10px",
                  padding: "15px",
                  backgroundColor: "#fff",
                  boxShadow: "2px 2px 10px rgba(0,0,0,0.1)"
                }}
              >
                <h3 style={{ marginBottom: "15px" }}>
                  ðŸ§© {comp.component}
                </h3>
                <p>
                  <strong>Snapshot build:</strong>{" "}
                  {this.getStatusIcon(comp.snapshot.status)}{" "}
                  <a
                    href={comp.snapshot.jenkinsUrl}
                    target="_blank"
                    rel="noopener noreferrer"
                  >
                    Jenkins-link
                  </a>
                </p>
                <p>
                  <strong>Release build:</strong>{" "}
                  {this.getStatusIcon(comp.release.status)}{" "}
                  <a
                    href={comp.release.jenkinsUrl}
                    target="_blank"
                    rel="noopener noreferrer"
                  >
                    Jenkins-link
                  </a>
                </p>
              </div>
            ))}
          </div>
        )}
      </div>
    );
  }
}

export default ApplicationStatus;
